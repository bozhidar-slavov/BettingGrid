// <auto-generated />
using System;
using BettingGrid.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BettingGrid.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200303150004_SeedDataInEventsTable")]
    partial class SeedDataInEventsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BettingGrid.API.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AwaySideOdds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DrawOdds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HomeSideOdds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwaySideOdds = 1.60m,
                            DrawOdds = 3.65m,
                            EventName = "Chelsea - Liverpool",
                            HomeSideOdds = 2.80m,
                            StartDate = new DateTime(2020, 3, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            AwaySideOdds = 1.40m,
                            DrawOdds = 14.50m,
                            EventName = "Wilder - Fury",
                            HomeSideOdds = 4.50m,
                            StartDate = new DateTime(2020, 4, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            AwaySideOdds = 5.50m,
                            DrawOdds = 3.50m,
                            EventName = "Inter - Ludogorets",
                            HomeSideOdds = 1.45m,
                            StartDate = new DateTime(2020, 3, 13, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            AwaySideOdds = 2.60m,
                            DrawOdds = 3.45m,
                            EventName = "Barcelona - Real Madrid",
                            HomeSideOdds = 2.30m,
                            StartDate = new DateTime(2020, 3, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
